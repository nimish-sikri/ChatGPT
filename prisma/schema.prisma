// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  userId String @unique
  name String
  email String @db.Text

  conversations Conversation[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Conversation {
  id String @id @default(uuid())
  title String @db.Text
  onceLoaded Boolean @default(false)
  
  userId String
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  messages Message[]
  sharelinks Sharelink[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id String @id @default(uuid())
  body String @db.Text

  isAiReply Boolean @default(false)

  conversationId String?
  conversation Conversation? @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sharelink {
  id String @id @default(uuid())
  
  conversationId String?
  conversation Conversation? @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}